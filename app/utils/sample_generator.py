"""
Sample Generator

This module provides functions to generate sample data files for demonstration purposes
when no existing data files are found in the system.
"""
import os
import json
from config.settings import DATA_DIR, RESULTS_DIR, TRAINING_DIR

def create_sample_json_file():
    """Create a sample JSON file for demonstration purposes."""
    sample_data = {
        "stocks": {
            "total": 5,
            "success": 4,
            "failed": 1,
            "details": {
                "AAPL": {
                    "status": "success",
                    "training_time": 45.2,
                    "model_path": "./models/AAPL_lstm.h5"
                },
                "MSFT": {
                    "status": "success",
                    "training_time": 38.7,
                    "model_path": "./models/MSFT_lstm.h5"
                },
                "GOOGL": {
                    "status": "success",
                    "training_time": 42.1,
                    "model_path": "./models/GOOGL_lstm.h5"
                },
                "AMZN": {
                    "status": "success",
                    "training_time": 40.5,
                    "model_path": "./models/AMZN_lstm.h5"
                },
                "TSLA": {
                    "status": "failed",
                    "error": "Insufficient data"
                }
            }
        }
    }
    
    # Create training directory if it doesn't exist
    os.makedirs(TRAINING_DIR, exist_ok=True)
    
    # Save the sample JSON file
    sample_file_path = os.path.join(TRAINING_DIR, "sample_training_summary.json")
    with open(sample_file_path, 'w') as f:
        json.dump(sample_data, f, indent=4)
    
    print(f"Created sample JSON file at {sample_file_path}")
    
    # Create a sample validation summary
    validation_data = {
        "AAPL": {
            "metrics": {
                "rmse": 2.34,
                "mae": 1.98,
                "r2": 0.87,
                "mape": 1.25
            },
            "best_horizon": 5
        },
        "MSFT": {
            "metrics": {
                "rmse": 1.87,
                "mae": 1.42,
                "r2": 0.91,
                "mape": 0.98
            },
            "best_horizon": 3
        }
    }
    
    # Save the sample validation file
    validation_file_path = os.path.join(RESULTS_DIR, "validation_summary.json")
    with open(validation_file_path, 'w') as f:
        json.dump(validation_data, f, indent=4)
    
    print(f"Created sample validation file at {validation_file_path}")
    
    return [sample_file_path, validation_file_path]

def create_sample_csv_file():
    """Create a sample CSV file for demonstration purposes."""
    sample_data = """date,open,high,low,close,volume,ticker
2023-01-01,150.23,153.45,149.87,152.54,12345678,AAPL
2023-01-02,152.76,155.21,151.89,154.32,23456789,AAPL
2023-01-03,154.55,156.78,153.21,155.98,34567890,AAPL
2023-01-04,156.01,158.43,155.67,157.76,45678901,AAPL
2023-01-05,157.89,159.34,156.54,158.92,56789012,AAPL
2023-01-06,159.01,160.75,158.32,160.45,67890123,AAPL
2023-01-07,160.32,162.43,159.87,161.78,78901234,AAPL
"""
    
    # Create data directory if it doesn't exist
    os.makedirs(DATA_DIR, exist_ok=True)
    
    # Save the sample CSV file
    sample_file_path = os.path.join(DATA_DIR, "sample_stock_data.csv")
    with open(sample_file_path, 'w') as f:
        f.write(sample_data)
    
    print(f"Created sample CSV file at {sample_file_path}")
    
    return sample_file_path

def create_sample_html_report():
    """Create a sample HTML report for demonstration purposes."""
    sample_html = """<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sample Investment Report</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 20px;
            color: #333;
        }
        h1 {
            color: #2c3e50;
            border-bottom: 2px solid #3498db;
            padding-bottom: 10px;
        }
        h2 {
            color: #2980b9;
            margin-top: 30px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
        }
        th, td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        th {
            background-color: #f5f5f5;
        }
        .recommendation {
            background-color: #e8f4f8;
            padding: 15px;
            border-radius: 5px;
            margin: 20px 0;
        }
    </style>
</head>
<body>
    <h1>Investment Recommendation Report</h1>
    <p>Generated on: January 1, 2023</p>
    
    <h2>Market Overview</h2>
    <p>This is a sample investment report demonstrating the format of reports generated by the system.</p>
    
    <h2>Top Recommended Stocks</h2>
    <table>
        <thead>
            <tr>
                <th>Stock</th>
                <th>Current Price</th>
                <th>Predicted Price (7d)</th>
                <th>Expected Return</th>
                <th>Risk Level</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>AAPL</td>
                <td>$150.23</td>
                <td>$158.92</td>
                <td>5.78%</td>
                <td>Medium</td>
            </tr>
            <tr>
                <td>MSFT</td>
                <td>$242.58</td>
                <td>$255.14</td>
                <td>5.18%</td>
                <td>Low</td>
            </tr>
            <tr>
                <td>AMZN</td>
                <td>$98.12</td>
                <td>$104.32</td>
                <td>6.32%</td>
                <td>Medium</td>
            </tr>
        </tbody>
    </table>
    
    <div class="recommendation">
        <h3>Personalized Recommendation</h3>
        <p>Based on your risk profile, we recommend allocating your investment portfolio as follows:</p>
        <ul>
            <li>60% in Growth Stocks (AAPL, MSFT, GOOGL)</li>
            <li>30% in Value Stocks (AMZN, TSLA)</li>
            <li>10% in Cash or Cash Equivalents</li>
        </ul>
    </div>
    
    <h2>Methodology</h2>
    <p>This report is based on predictions from multiple models trained on historical stock data:</p>
    <ul>
        <li><strong>LSTM model</strong> - For short-term predictions (1-7 days)</li>  
        <li><strong>GRU model</strong> - For medium-term predictions (7-14 days)</li>
        <li><strong>Ensemble model</strong> - For long-term predictions (14-30 days)</li>
    </ul>
    <p>The models take into account various technical indicators and market conditions to generate forecasts.</p>
    
    <p><i>This is a sample report for demonstration purposes only and does not constitute financial advice.</i></p>
</body>
</html>"""
    
    # Create reports directory if it doesn't exist
    os.makedirs(os.path.join(RESULTS_DIR, "reports"), exist_ok=True)
    
    # Save the sample HTML file
    sample_file_path = os.path.join(RESULTS_DIR, "reports", "sample_investment_report.html")
    with open(sample_file_path, 'w') as f:
        f.write(sample_html)
    
    print(f"Created sample HTML report at {sample_file_path}")
    
    return sample_file_path 